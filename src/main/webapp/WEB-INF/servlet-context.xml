<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.thevolume360.web" />
	<context:annotation-config></context:annotation-config>
	<security:global-method-security
		pre-post-annotations="enabled" secured-annotations="enabled">
		<security:protect-pointcut
			expression="execution(* com.thevolume360.service.*Service.*(..))"
			access="ROLE_USER,ROLE_ADMIN" />
	</security:global-method-security>
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:argument-resolvers>
			<bean id="pageagleArgumentResolver"
				class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
				<property name="fallbackPageable" ref="fallbackPageable" />
			</bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<bean name="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<bean name="jsonTemplate"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

	<bean id="customFormatterRegistrar"
		class="com.thevolume360.web.formatter.registry.FormatterRegistrars">
	</bean>

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatterRegistrars">
			<set>
				<ref bean="customFormatterRegistrar" />
			</set>
		</property>
	</bean>

	<bean id="fallbackPageable" class="org.springframework.data.domain.PageRequest">
		<constructor-arg type="int" value="0" />
		<constructor-arg type="int" value="20" />
	</bean>

	<!-- Maps '/' requests to the 'home' view -->
	<mvc:view-controller path="/" view-name="home" />
	<mvc:view-controller path="/resourceNotFound"
		view-name="resourceNotFound" />
	<mvc:view-controller path="/uncaughtException"
		view-name="uncaughtException" />
	<mvc:view-controller path="/accessDenied"
		view-name="accessDenied" />

	<!-- **************************************************************** -->
	<!-- THYMELEAF-SPECIFIC ARTIFACTS -->
	<!-- TemplateResolver <- TemplateEngine <- ViewResolver -->
	<!-- **************************************************************** -->
	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="cacheable" value="false" />
		<!-- Just for hot-deployment purpose; shouldn't be in production -->
		<property name="characterEncoding" value="UTF-8"></property>

	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean
					class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" />
				<bean class="nz.net.ultraq.thymeleaf.LayoutDialect" />
			</set>
		</property>
	</bean>


	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. -->
	<bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false" />


	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="contentType" value="text/html; charset=UTF-8"></property>
	</bean>

	<!-- Efficiently serving static resources; e.g. test.png will be access-able 
		directly by <SERVER>/images/test.png URL -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<mvc:interceptors>
		<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
		<!--Interceptor for redirecting home page if user is already logged in -->
		<mvc:interceptor>
			<mvc:mapping path="/login" />
			<bean class="com.thevolume360.interceptor.LoginPageRedirectInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>



	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="3145728" />
	</bean>

</beans>
